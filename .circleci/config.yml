# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  upload-artifact:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - "86:24:fb:b4:94:77:0c:b3:dc:68:49:24:7e:c9:46:3b"
      - checkout
      - run:
          name: Build
          command: mvn dependency:go-offline
      - run:
          name: mvn build
          command: |
            mvn clean install
      - run:
          name: Install jfrog
          command: curl -fL https://getcli.jfrog.io | sh  #BASH
      - run:
          name: Push to Artifactory
          command: |
               ./jfrog config add artifactory-server --artifactory-url http://ec2-54-90-193-187.compute-1.amazonaws.com:8082/ui/repos/tree/General/libs-snapshot-local/com/heroku/sample/embeddedTomcatSample --user admin --password Admin@2022 --interactive=false
               ./jfrog rt ping
              #./jfrog rt u embeddedTomcatSample-1.0-SNAPSHOT.jar libs-snapshot
              #./jfrog rt dl --url http://ec2-54-90-193-187.compute-1.amazonaws.com:8082/artifactory/libs-snapshot-local/com/heroku/sample/embeddedTomcatSample/1.0-SNAPSHOT/embeddedTomcatSample-1.0-20220629.081333-1.jar --user admin --password Admin@2022 /home/ubuntu/jfrog --force
              #./jfrog rt dl --url http://ec2-54-90-193-187.compute-1.amazonaws.com:8082/artifactory/libs-snapshot-local/com/heroku/sample/embeddedTomcatSample/1.0-SNAPSHOT/embeddedTomcatSample-1.0-20220629.081333-1.jar --user admin --password Admin@2022 /home/ubuntu/jfrog
              #./jfrog rt u --spec=embeddedTomcatSample-1.0-20220629.081333-1.jar --url http://ec2-54-90-193-187.compute-1.amazonaws.com:8082/artifactory/libs-release-local/
              #./jfrog rt u --url=http://ec2-54-90-193-187.compute-1.amazonaws.com:8082 --user=admin --password=Admin@2022 libs-snapshot-local/com/heroku/sample/embeddedTomcatSample/1.0-SNAPSHOT/embeddedTomcatSample-1.0-20220629.081333-1.jar
              #/jfrog rt u "multi*/*.jar" libs-snapshot-local --build-name=embeddedTomcatSample --build-number=$CIRCLE_BUILD_NUM --flat=false
              #./jfrog rt u libs-snapshot-local/com/heroku/sample/embeddedTomcatSample/1.0-SNAPSHOT/embeddedTomcatSample-1.0-20220629.081333-1.jar --build-number=$CIRCLE_BUILD_NUM --build-name=embeddedTomcatSample-1.0-20220629.081333-1.jar --url=http://ec2-54-90-193-187.compute-1.amazonaws.com:8082/ --user=admin --password=Admin@2022
              #./jfrog rt u http://ec2-54-90-193-187.compute-1.amazonaws.com:8082/ui/repos/tree/General/libs-snapshot-local --build-name=$CIRCLE_JOB --build-number=$CIRCLE_BUILD_NUM
              #./jfrog config add artifactory-server --artifactory-url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_APIKEY --interactive=false
              #./jfrog config add artifactory-server --artifactory-url="$ARTIFACTORY_URL" --user="$ARTIFACTORY_USER" --password="$ARTIFACTORY_PASSWORD" --interactive=false
              #./jfrog rt ping
              #./jfrog rt u --url= http://ec2-54-90-193-187.compute-1.amazonaws.com:8082/artifactory/libs-snapshot-local/ --user=admin --password=Admin@2022 --build-number=$CIRCLE_BUILD_NUM --build-name=$CIRCLE_JOB
              #./jfrog rt bce <name_you_give_to_build> $CIRCLE_BUILD_NUM
              #./jfrog rt bp <name_you_give_to_build> $CIRCLE_BUILD_NUM
              
              
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - upload-artifact
